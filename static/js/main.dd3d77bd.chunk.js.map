{"version":3,"sources":["Components/season_adapter.tsx","Screens/home_screen.tsx","Components/race_adapter.tsx","Screens/races_screen.tsx","Components/rank_adapter.tsx","Screens/rank_screen.tsx","App.tsx","index.js"],"names":["SeasonAdapter","season","navigation","View","style","styles","row","Image","image","source","uri","Text","onPress","navigate","text","deviceWidth","Dimensions","get","width","StyleSheet","create","height","alignSelf","flexDirection","justifyContent","alignContent","backgroundColor","borderColor","padding","borderBottomWidth","marginLeft","color","fontSize","fontWeight","Homescreen","React","useState","state","setState","useEffect","fetch","then","response","json","MRData","SeasonTable","Seasons","catch","error","console","container","orange","alert","FlatList","flatlist","data","sort","a","b","parseInt","keyExtractor","index","renderItem","item","footer","flex","alignItems","flexWrap","RaceAdapter","race","raceName","Circuit","circuitName","date","RacesScreen","route","params","RaceTable","Races","round","position","RankAdapter","raceResult","Driver","givenName","familyName","Constructor","name","Time","time","RankScreen","Results","Stack","createStackNavigator","App","NavigationContainer","Navigator","Screen","component","appName","AppRegistry","registerComponent","runApplication","rootTag","document","getElementById"],"mappings":"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","file":"static/js/main.dd3d77bd.chunk.js","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, View, Image, Dimensions } from 'react-native';\nimport { NavigationScreenProp } from 'react-navigation';\nimport type { Season } from '../Types/season'\n\ntype SeasonProps = {\n   season: Season;\n   navigation: NavigationScreenProp<any,any>;\n}\n\nexport const SeasonAdapter: React.FC<SeasonProps> = ({ season, navigation }) => \n  <View style={styles.row}>\n      <Image\n        style={ styles.image }\n        source={{ uri: 'https://www.shareicon.net/data/512x512/2016/05/26/771264_cup_512x512.png'}}                 \n      />\n      <Text \n        onPress = { \n          () => navigation.navigate(\n            'Races',\n            { season: season.season }\n          ) \n        }\n        style={ styles.text }\n      > {season.season}</Text>\n  </View> \n\nconst deviceWidth = Dimensions.get('window').width\n\nconst styles = StyleSheet.create({\n  image: {\n    width: 45, \n    height: 45,\n    alignSelf: 'center',\n  },\n  row:{\n    flexDirection: 'row',\n    height: 60,\n    width: deviceWidth,\n    justifyContent: 'flex-start',\n    alignContent: 'center', \n    backgroundColor: '#333333',\n    borderColor: '#000000',\n    padding: 20,\n    borderBottomWidth: 1,\n  },\n  text: {\n    marginLeft: 10,\n    color: '#fff',\n    backgroundColor: '#333333',\n    fontSize: 18,\n    fontWeight: 'bold',\n    alignSelf: 'center'\n  },\n})","import React from 'react';\nimport { StyleSheet, Text, View, Dimensions, FlatList } from 'react-native';\nimport { SeasonAdapter } from '../Components/season_adapter'\nimport { NavigationScreenProp } from 'react-navigation';\nimport { Season } from '../Types/season'\n\ntype HomeProps = {\n  navigation: NavigationScreenProp<any,any>;\n}\n\nexport const Homescreen : React.FC<HomeProps> = ({ navigation })=> {\n\n    const [ state, setState ] = React.useState<Season[]>()\n\n    React.useEffect(() => getSeasons())\n\n    function sayHello() {\n      alert('Welcome to the F1 history')\n    }\n\n    function getSeasons() {\n        fetch('https://ergast.com/api/f1/seasons.json?limit=72')\n        .then((response) => response.json())\n        .then((json) => { \n            setState(json.MRData.SeasonTable.Seasons)\n        })\n        .catch((error) => console.error(error))\n    }\n\n    return (\n      <View style={styles.container}>\n        <Text style={styles.orange} onPress={sayHello}>F1 History</Text>\n          <FlatList\n            style= { styles.flatlist }\n            data= { state?.sort((a,b) => parseInt(b.season)-parseInt(a.season))}\n            keyExtractor= {({ season }, index) => season }\n            renderItem= {({item}) => (\n              <SeasonAdapter\n                season={ item } \n                navigation= {navigation}\n              />\n            )} \n          />\n        <Text style={styles.footer}>Footer</Text>\n      </View>\n  )\n}\n\nconst deviceWidth = Dimensions.get('window').width\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#AAAAAA',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  flatlist: {\n    flexWrap: 'wrap',\n    width: deviceWidth,\n  },\n  orange: {\n    color: '#FF9800',\n    backgroundColor: '#000000',\n    padding: 10,\n    width: deviceWidth,\n  },\n  footer: {\n    flex: 1,\n    color: '#fff',\n    backgroundColor: '#00FF98',\n    padding: 10,\n    width: deviceWidth,\n  }\n});\n","import { NavigationScreenProp } from 'react-navigation';\nimport React from 'react';\nimport { StyleSheet, Text, View, Image, Dimensions } from 'react-native';\nimport { Race } from '../Types/race_types';\n\ntype RaceProps = {\n  race: Race;\n  navigation: NavigationScreenProp<any,any>;\n}\n\nexport const RaceAdapter: React.FC<RaceProps> = ({ race, navigation }) =>\n  <View style={styles.row}>\n      <Image\n        style={ styles.image }\n        source={{ uri: 'https://image.flaticon.com/icons/png/512/147/147216.png' }} \n        />\n      <Text \n        onPress = { \n          () => navigation.navigate(\n            'Rank',\n            { race: race }\n          ) \n        }\n        style={ styles.text }\n      > {race.raceName} ({race.Circuit ? race.Circuit.circuitName : \"\" } ) - {race.date} </Text>\n  </View> \n\nconst deviceWidth = Dimensions.get('window').width\n\nconst styles = StyleSheet.create({\n  image: {\n    width: 45, \n    height: 45,\n    alignSelf: 'center',\n  },\n  row:{\n    flexDirection: 'row',\n    height: 60,\n    width: deviceWidth,\n    justifyContent: 'flex-start',\n    alignContent: 'center', \n    backgroundColor: '#333333',\n    borderColor: '#000000',\n    padding: 20,\n    borderBottomWidth: 1,\n  },\n  text: {\n    marginLeft: 10,\n    color: '#fff',\n    backgroundColor: '#333333',\n    fontSize: 12,\n    fontWeight: 'bold',\n    alignSelf: 'center'\n  },\n})","import React from 'react';\nimport { StyleSheet, Text, View, Dimensions, FlatList } from 'react-native';\nimport { RaceAdapter } from '../Components/race_adapter';\nimport { NavigationScreenProp } from 'react-navigation';\nimport { RouteProp } from '@react-navigation/native';\nimport type { Race } from '../Types/race_types';\n\ntype RootStackParamList = {\n  Season: {\n    season: string\n  } \n}\n\ntype RaceScreenRouteProp = RouteProp<RootStackParamList, 'Season'>\n\ntype RacesScreenProps = {\n  route: RaceScreenRouteProp,\n  navigation: NavigationScreenProp<any,any>;\n}\n\nexport const RacesScreen: React.FC<RacesScreenProps> = ({ route, navigation }) => {\n\n  const [ state, setState ] = React.useState<Race[]>()\n  const { season } = route.params\n\n  React.useEffect(() => { getRaces() })\n\n  function getRaces() {\n      fetch(`https://ergast.com/api/f1/${season}/results.json?limit=400`)\n      .then((response) => response.json())\n      .then((json) => { \n          setState(json.MRData.RaceTable.Races)\n      })\n      .catch((error) => console.error(error))\n  }\n\n  return (\n  <View style={styles.container}>\n    <Text \n      style={styles.orange} \n    > { season } Season - Races\n    </Text>\n    <FlatList\n      style= { styles.flatlist }\n      data= { state }\n      keyExtractor= {({ round }, index) => round }\n      renderItem= {({item}) => (\n        <RaceAdapter race={ item } navigation={ navigation }/>\n      )} \n      />\n    <Text style={styles.footer}>Footer</Text>\n  </View>\n  )\n}\n\nconst deviceWidth = Dimensions.get('window').width\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#AAAAAA',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  flatlist: {\n    flexWrap: 'wrap',\n    width: deviceWidth,\n  },\n  orange: {\n    color: '#FF9800',\n    backgroundColor: '#000000',\n    padding: 10,\n    width: deviceWidth,\n  },\n  footer: {\n    color: '#fff',\n    backgroundColor: '#00FF98',\n    padding: 10,\n    position: 'relative',\n    width: deviceWidth,\n  }\n});\n","import React from 'react';\nimport { \n  StyleSheet, \n  Text, View, \n  Image, \n  Dimensions \n} from 'react-native';\nimport type { \n  RaceResult\n} from '../Types/race_types'\n\ntype RankProps = {\n   raceResult: RaceResult;\n}\n\nexport const RankAdapter: React.FC<RankProps> = ({ raceResult }) => \n  <View style={styles.row}>\n    <Image\n      style={styles.image}\n      source={{ uri: 'https://image.flaticon.com/icons/png/512/164/164443.png' }} />\n    <Text\n      style={styles.text}\n    > {raceResult.position}) {raceResult.Driver?.givenName} {raceResult.Driver?.familyName} - {raceResult.Constructor?.name}: {raceResult.Time?.time}</Text>\n  </View>;\n\nconst deviceWidth = Dimensions.get('window').width\n\nconst styles = StyleSheet.create({\n  image: {\n    width: 45, \n    height: 45,\n    alignSelf: 'center', \n  },\n  row:{\n    flexDirection: 'row',\n    height: 60,\n    width: deviceWidth,\n    justifyContent: 'flex-start',\n    alignContent: 'center', \n    backgroundColor: '#333333',\n    borderColor: '#000000',\n    padding: 20,\n    borderBottomWidth: 1,\n  },\n  text: {\n    marginLeft: 10,\n    color: '#fff',\n    backgroundColor: '#333333',\n    fontSize: 12,\n    fontWeight: 'bold',\n    alignSelf: 'center'\n  },\n})","\nimport React from 'react';\nimport { StyleSheet, Text, View, Dimensions, FlatList } from 'react-native'\nimport { RankAdapter } from '../Components/rank_adapter'\nimport type { Race, RaceResult } from '../Types/race_types'\nimport { NavigationScreenProp } from 'react-navigation';\nimport { RouteProp } from '@react-navigation/native'\n\ntype RootStackParamList = {\n  Race: { race: Race }\n}\n\ntype RankScreenRouteProp = RouteProp<RootStackParamList, 'Race'>\n\ntype RankScreenProps = {\n  route: RankScreenRouteProp;\n  navigation: NavigationScreenProp<any,any>;\n}\n\nexport const RankScreen:React.FC<RankScreenProps> = ({ route, navigation }) =>\n        <View style={styles.container}>\n          <Text \n            style={styles.orange} \n          > { route.params.race.season } Season - { route.params.race.Circuit?.circuitName }\n          </Text>\n          <FlatList\n            style= { styles.flatlist }\n            data= { route.params.race.Results }\n            keyExtractor= {({ position }, index) => position }\n            renderItem= {({item}) => (\n              <RankAdapter raceResult={ item } />\n            )} \n           />\n          <Text style={styles.footer}>Footer</Text>\n        </View>\n\nconst deviceWidth = Dimensions.get('window').width\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#AAAAAA',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  flatlist: {\n    flexWrap: 'wrap',\n    width: deviceWidth,\n  },\n  orange: {\n    color: '#FF9800',\n    backgroundColor: '#000000',\n    padding: 10,\n    width: deviceWidth,\n  },\n  footer: {\n    flex: 1,\n    color: '#fff',\n    backgroundColor: '#00FF98',\n    padding: 10,\n    width: deviceWidth,\n  }\n});\n","import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { Homescreen } from \"./Screens/home_screen\"\nimport { RacesScreen } from \"./Screens/races_screen\"\nimport { RankScreen } from \"./Screens/rank_screen\"\n\nconst Stack = createStackNavigator()\n\nexport const App = () => {\n  return (\n  <SafeAreaProvider>\n    <NavigationContainer>\n      <Stack.Navigator >\n        <Stack.Screen\n          component={ Homescreen }\n          name = 'F1'\n        />\n        <Stack.Screen\n          component={ RacesScreen }\n          name = 'Races'\n        />\n        <Stack.Screen\n          component={ RankScreen }\n          name = 'Rank'\n        />\n      </Stack.Navigator>\n    </NavigationContainer>\n  </SafeAreaProvider> \n  )\n}\n\nexport default App;","import { AppRegistry } from \"react-native\";\nimport { App } from \"./App.tsx\";\n\nconst appName = \"F1React\";\n\nAppRegistry.registerComponent(appName, () => App);\nAppRegistry.runApplication(appName, {\n  // Mount the react-native app in the \"root\" div of index.html\n  rootTag: document.getElementById(\"root\"),\n});"],"sourceRoot":""}